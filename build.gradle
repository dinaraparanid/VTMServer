import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
    id 'io.ktor.plugin' version '2.3.3'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.10'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'com.paranid5.vtmserver'
version '0.1.0'

mainClassName = "${group}.ApplicationKt"

final def isDevelopment = project.ext.has('development')
applicationDefaultJvmArgs = ["-Dio.ktor.development=$isDevelopment"]

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

final ktorVersion = '2.3.3'

dependencies {
    implementation "io.ktor:ktor-server-core-jvm:$ktorVersion"
    implementation "io.ktor:ktor-server-content-negotiation:$ktorVersion"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktorVersion"
    implementation "io.ktor:ktor-server-netty-jvm:$ktorVersion"
    implementation "io.ktor:ktor-server-cors:$ktorVersion"
    implementation "io.ktor:ktor-server-compression:$ktorVersion"
    implementation "io.ktor:ktor-server-partial-content:$ktorVersion"
    implementation "io.ktor:ktor-server-auto-head-response:$ktorVersion"
    implementation "io.ktor:ktor-server-auth:$ktorVersion"

    implementation 'io.arrow-kt:arrow-fx-coroutines:1.2.0'

    implementation 'io.github.cdimascio:dotenv-kotlin:6.4.1'

    implementation 'com.github.sealedtx:java-youtube-downloader:3.2.3'

    implementation 'ch.qos.logback:logback-classic:1.4.4'

    implementation group: 'net.jthink', name: 'jaudiotagger', version: '3.0.1'

    implementation 'com.google.firebase:firebase-admin:9.1.1'
}

kotlin {
    jvmToolchain(17)
}

tasks.wrapper {
    gradleVersion = '8.2'
    distributionType = Wrapper.DistributionType.ALL
}

tasks.jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes['Main-Class'] = mainClassName
    }

    configurations['compileClasspath'].forEach { from(zipTree(it.absoluteFile)) }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

tasks.register('fatJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveBaseName.set "${project.name}-fat"

    manifest {
        attributes 'Implementation-Title': 'VTM Jar'
        attributes 'Implementation-Version': archiveVersion
        attributes 'Main-Class': mainClassName
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.withType(ShadowJar.class).configureEach {
    mergeServiceFiles()
    archiveFileName.set 'VTMServer.jar'
}

tasks {
    compileKotlin {
        kotlinOptions.jvmTarget = '17'
    }

    build { dependsOn fatJar }
}